### YamlMime:ManagedReference
items:
- uid: CodeNodes.Core.DocumentationComments
  commentId: T:CodeNodes.Core.DocumentationComments
  id: DocumentationComments
  parent: CodeNodes.Core
  children:
  - CodeNodes.Core.DocumentationComments.Add(System.Double,System.Double)
  - CodeNodes.Core.DocumentationComments.Add(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: DocumentationComments
  nameWithType: DocumentationComments
  fullName: CodeNodes.Core.DocumentationComments
  type: Class
  source:
    remote:
      path: src/CodeNodes/CodeNodes.Core/DocumentationComments.cs
      branch: master
      repo: https://github.com/zhaobingwang/PracticeProject.git
    id: DocumentationComments
    path: src/CodeNodes/CodeNodes.Core/DocumentationComments.cs
    startLine: 9
  assemblies:
  - CodeNodes.Core
  namespace: CodeNodes.Core
  summary: "\n建议的文档注释标记\n"
  example: []
  syntax:
    content: public class DocumentationComments
    content.vb: Public Class DocumentationComments
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CodeNodes.Core.DocumentationComments.Add(System.Int32,System.Int32)
  commentId: M:CodeNodes.Core.DocumentationComments.Add(System.Int32,System.Int32)
  id: Add(System.Int32,System.Int32)
  parent: CodeNodes.Core.DocumentationComments
  langs:
  - csharp
  - vb
  name: Add(Int32, Int32)
  nameWithType: DocumentationComments.Add(Int32, Int32)
  fullName: CodeNodes.Core.DocumentationComments.Add(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/CodeNodes/CodeNodes.Core/DocumentationComments.cs
      branch: master
      repo: https://github.com/zhaobingwang/PracticeProject.git
    id: Add
    path: src/CodeNodes/CodeNodes.Core/DocumentationComments.cs
    startLine: 30
  assemblies:
  - CodeNodes.Core
  namespace: CodeNodes.Core
  summary: "\n计算两个整数 <code data-dev-comment-type=\"paramref\" class=\"paramref\">n1</code> , <code data-dev-comment-type=\"paramref\" class=\"paramref\">n2</code> 的和\n"
  example:
  - "\n这是一个介绍如何使用<xref href=\"CodeNodes.Core.DocumentationComments.Add(System.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref>方法的示例\n<pre><code>class TestClass\n{\n    static int Main()\n    {\n        return Add(1,2);\n    }\n}</code></pre>\n"
  syntax:
    content: public double Add(int n1, int n2)
    parameters:
    - id: n1
      type: System.Int32
      description: 一个int值
    - id: n2
      type: System.Int32
      description: 一个int值
    return:
      type: System.Double
      description: 两个整数的和
    content.vb: Public Function Add(n1 As Integer, n2 As Integer) As Double
  overload: CodeNodes.Core.DocumentationComments.Add*
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: 当两数之和大于int的最大值时抛出此异常.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CodeNodes.Core.DocumentationComments.Add(System.Double,System.Double)
  commentId: M:CodeNodes.Core.DocumentationComments.Add(System.Double,System.Double)
  id: Add(System.Double,System.Double)
  parent: CodeNodes.Core.DocumentationComments
  langs:
  - csharp
  - vb
  name: Add(Double, Double)
  nameWithType: DocumentationComments.Add(Double, Double)
  fullName: CodeNodes.Core.DocumentationComments.Add(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/CodeNodes/CodeNodes.Core/DocumentationComments.cs
      branch: master
      repo: https://github.com/zhaobingwang/PracticeProject.git
    id: Add
    path: src/CodeNodes/CodeNodes.Core/DocumentationComments.cs
    startLine: 56
  assemblies:
  - CodeNodes.Core
  namespace: CodeNodes.Core
  summary: "\n计算两个double类型数字 <code data-dev-comment-type=\"paramref\" class=\"paramref\">d1</code> , <code data-dev-comment-type=\"paramref\" class=\"paramref\">d2</code> 的和\n"
  example:
  - "\n这是一个介绍如何使用<xref href=\"CodeNodes.Core.DocumentationComments.Add(System.Double%2cSystem.Double)\" data-throw-if-not-resolved=\"false\"></xref>方法的示例\n<pre><code>class TestClass\n{\n    static int Main()\n    {\n        return Add(1.2,3.4);\n    }\n}</code></pre>\n"
  syntax:
    content: public double Add(double d1, double d2)
    parameters:
    - id: d1
      type: System.Double
      description: 一个double值
    - id: d2
      type: System.Double
      description: 一个double值
    return:
      type: System.Double
      description: 两个double类型数字的和
    content.vb: Public Function Add(d1 As Double, d2 As Double) As Double
  overload: CodeNodes.Core.DocumentationComments.Add*
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: 当两数之和大于int的最大值时抛出此异常.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CodeNodes.Core
  commentId: N:CodeNodes.Core
  name: CodeNodes.Core
  nameWithType: CodeNodes.Core
  fullName: CodeNodes.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CodeNodes.Core.DocumentationComments.Add(System.Int32,System.Int32)
  commentId: M:CodeNodes.Core.DocumentationComments.Add(System.Int32,System.Int32)
  isExternal: true
- uid: System.OverflowException
  commentId: T:System.OverflowException
  isExternal: true
- uid: CodeNodes.Core.DocumentationComments.Add*
  commentId: Overload:CodeNodes.Core.DocumentationComments.Add
  name: Add
  nameWithType: DocumentationComments.Add
  fullName: CodeNodes.Core.DocumentationComments.Add
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: CodeNodes.Core.DocumentationComments.Add(System.Double,System.Double)
  commentId: M:CodeNodes.Core.DocumentationComments.Add(System.Double,System.Double)
  isExternal: true
